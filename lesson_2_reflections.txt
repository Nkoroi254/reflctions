git init 
	creates a new repository
git status 
	evaluates status of current repository

what happens when you initialize a repostiory? Why do you need to do it?
	
	this creates a git repository
	git status shows current status of the repository

How is the staging area different from the working directory and the repository?
What value do you think it offers?
	In the staging area changes to files are awaiting to be commited while in the working 
	directory files havent been added to git.

	Its important since it only tracks files that are added as opposed to entire directory files

How can you use the staging area to make sure you have one commit per logical
change?
	adding files to staging area using git add filename and commiting to repository
	once using git commit once logical amount of files have been changed.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
	Branches are helpfull whenever you want to make a diffrent version from the main project
	but still keep supporting the main project eg 2 game modes easy and hard where hard is the 
	master branch and easy-mode branch habours the easy mode but all easy has done is 
	changed afew values of the master branch variables but without affecting the master branch
	to create an easier version of the game. 

	Create a branch any time you are doing something diffrent. Think of it as 
	context switching. eg have master branch be production code that is code you
	do not expect to break and have a development branch ie experimental branch that 
	expect to break. 

How do the diagrams help you visualize the branch structure?
	they are easy to trace the changes made to branches as oppose to a
	banch of text which is harder to track

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?  
	result of merging is reconcilling two branches to one.
	diagram is to show affected commits by the merge.  

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
	pros 
		it can identify changes merge them with ease
		it spots conflicts and marks them for you to resolve b4 merging
	cons
		it can't resolve conflicts on its own